<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid19_data' inline='true' name='federated.1mo7t1i1i5ddct1geecwx1bjmgep' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid19_data' name='textscan.0dygart1v2v02w1266y0e1mdekps'>
            <connection class='textscan' directory='C:/Users/Mark Junois/Desktop' filename='covid19_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0dygart1v2v02w1266y0e1mdekps' name='covid19_data.csv' table='[covid19_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='total_cases' ordinal='2' />
            <column datatype='integer' name='new_cases' ordinal='3' />
            <column datatype='real' name='new_cases_smoothed' ordinal='4' />
            <column datatype='real' name='total_cases_per_million' ordinal='5' />
            <column datatype='real' name='new_cases_per_million' ordinal='6' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='7' />
            <column datatype='integer' name='total_deaths' ordinal='8' />
            <column datatype='integer' name='new_deaths' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
            <column datatype='real' name='total_deaths_per_million' ordinal='11' />
            <column datatype='real' name='new_deaths_per_million' ordinal='12' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='13' />
            <column datatype='string' name='excess_mortality' ordinal='14' />
            <column datatype='string' name='excess_mortality_cumulative' ordinal='15' />
            <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='16' />
            <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='17' />
            <column datatype='string' name='hosp_patients' ordinal='18' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='19' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='20' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='21' />
            <column datatype='string' name='icu_patients' ordinal='22' />
            <column datatype='string' name='icu_patients_per_million' ordinal='23' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='24' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='25' />
            <column datatype='real' name='stringency_index' ordinal='26' />
            <column datatype='real' name='reproduction_rate' ordinal='27' />
            <column datatype='integer' name='total_tests' ordinal='28' />
            <column datatype='string' name='new_tests' ordinal='29' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='30' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='31' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='32' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='33' />
            <column datatype='real' name='positive_rate' ordinal='34' />
            <column datatype='real' name='tests_per_case' ordinal='35' />
            <column datatype='real' name='total_vaccinations' ordinal='36' />
            <column datatype='real' name='people_vaccinated' ordinal='37' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='38' />
            <column datatype='integer' name='total_boosters' ordinal='39' />
            <column datatype='real' name='new_vaccinations' ordinal='40' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='41' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='42' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='43' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='44' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='45' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='46' />
            <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='47' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='48' />
            <column datatype='string' name='code' ordinal='49' />
            <column datatype='string' name='continent' ordinal='50' />
            <column datatype='integer' name='population' ordinal='51' />
            <column datatype='real' name='population_density' ordinal='52' />
            <column datatype='real' name='median_age' ordinal='53' />
            <column datatype='real' name='life_expectancy' ordinal='54' />
            <column datatype='real' name='gdp_per_capita' ordinal='55' />
            <column datatype='string' name='extreme_poverty' ordinal='56' />
            <column datatype='real' name='diabetes_prevalence' ordinal='57' />
            <column datatype='real' name='handwashing_facilities' ordinal='58' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
            <column datatype='string' name='human_development_index' ordinal='60' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>55</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>129</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[covid19_data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_cases:qk]&quot;' value='Total Cases' />
          <alias key='&quot;[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_deaths:qk]&quot;' value='Total Deaths' />
          <alias key='&quot;[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_vaccinations:qk]&quot;' value='Total Vaccinations' />
        </aliases>
      </column>
      <column caption='Total Cases (Latest)' datatype='real' name='[Calculation_1235393713647263744]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [date] = { FIXED [location] : MAX([date]) } THEN [total_cases] END' />
      </column>
      <column caption='Total Deaths (Latest)' datatype='real' name='[Calculation_1235393713647472641]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [date] = { FIXED [location] : MAX([date]) } THEN [total_deaths] END' />
      </column>
      <column caption='Total Vaccinations (Latest)' datatype='real' name='[Calculation_1235393713647599618]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [date] = { FIXED [location] : MAX([date]) } THEN [total_vaccinations] END' />
      </column>
      <column caption='covid19_data.csv' datatype='table' name='[__tableau_internal_object_id__].[covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD]' role='measure' type='quantitative' />
      <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='string' name='[excess_mortality]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative' datatype='string' name='[excess_mortality_cumulative]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='string' name='[excess_mortality_cumulative_absolute]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='string' name='[excess_mortality_cumulative_per_million]' role='dimension' type='nominal' />
      <column caption='Extreme Poverty' datatype='string' name='[extreme_poverty]' role='dimension' type='nominal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='string' name='[human_development_index]' role='dimension' type='nominal' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='real' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations' datatype='real' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='real' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Total Boosters' datatype='integer' name='[total_boosters]' role='measure' type='quantitative' />
      <column caption='Total Boosters Per Hundred' datatype='real' name='[total_boosters_per_hundred]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations]' derivation='Max' name='[max:total_vaccinations:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='total_cases' />
        <field-sort-custom-order field='new_cases' />
        <field-sort-custom-order field='new_cases_smoothed' />
        <field-sort-custom-order field='total_cases_per_million' />
        <field-sort-custom-order field='new_cases_per_million' />
        <field-sort-custom-order field='new_cases_smoothed_per_million' />
        <field-sort-custom-order field='total_deaths' />
        <field-sort-custom-order field='new_deaths' />
        <field-sort-custom-order field='new_deaths_smoothed' />
        <field-sort-custom-order field='total_deaths_per_million' />
        <field-sort-custom-order field='new_deaths_per_million' />
        <field-sort-custom-order field='new_deaths_smoothed_per_million' />
        <field-sort-custom-order field='excess_mortality' />
        <field-sort-custom-order field='excess_mortality_cumulative' />
        <field-sort-custom-order field='excess_mortality_cumulative_absolute' />
        <field-sort-custom-order field='excess_mortality_cumulative_per_million' />
        <field-sort-custom-order field='hosp_patients' />
        <field-sort-custom-order field='hosp_patients_per_million' />
        <field-sort-custom-order field='weekly_hosp_admissions' />
        <field-sort-custom-order field='weekly_hosp_admissions_per_million' />
        <field-sort-custom-order field='icu_patients' />
        <field-sort-custom-order field='icu_patients_per_million' />
        <field-sort-custom-order field='weekly_icu_admissions' />
        <field-sort-custom-order field='weekly_icu_admissions_per_million' />
        <field-sort-custom-order field='stringency_index' />
        <field-sort-custom-order field='reproduction_rate' />
        <field-sort-custom-order field='total_tests' />
        <field-sort-custom-order field='new_tests' />
        <field-sort-custom-order field='total_tests_per_thousand' />
        <field-sort-custom-order field='new_tests_per_thousand' />
        <field-sort-custom-order field='new_tests_smoothed' />
        <field-sort-custom-order field='new_tests_smoothed_per_thousand' />
        <field-sort-custom-order field='positive_rate' />
        <field-sort-custom-order field='tests_per_case' />
        <field-sort-custom-order field='total_vaccinations' />
        <field-sort-custom-order field='people_vaccinated' />
        <field-sort-custom-order field='people_fully_vaccinated' />
        <field-sort-custom-order field='total_boosters' />
        <field-sort-custom-order field='Calculation_1235393713647472641' />
        <field-sort-custom-order field='new_vaccinations' />
        <field-sort-custom-order field='new_vaccinations_smoothed' />
        <field-sort-custom-order field='total_vaccinations_per_hundred' />
        <field-sort-custom-order field='people_vaccinated_per_hundred' />
        <field-sort-custom-order field='people_fully_vaccinated_per_hundred' />
        <field-sort-custom-order field='total_boosters_per_hundred' />
        <field-sort-custom-order field='new_vaccinations_smoothed_per_million' />
        <field-sort-custom-order field='new_people_vaccinated_smoothed' />
        <field-sort-custom-order field='new_people_vaccinated_smoothed_per_hundred' />
        <field-sort-custom-order field='code' />
        <field-sort-custom-order field='continent' />
        <field-sort-custom-order field='population' />
        <field-sort-custom-order field='population_density' />
        <field-sort-custom-order field='median_age' />
        <field-sort-custom-order field='life_expectancy' />
        <field-sort-custom-order field='gdp_per_capita' />
        <field-sort-custom-order field='extreme_poverty' />
        <field-sort-custom-order field='diabetes_prevalence' />
        <field-sort-custom-order field='handwashing_facilities' />
        <field-sort-custom-order field='hospital_beds_per_thousand' />
        <field-sort-custom-order field='human_development_index' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_1235393713647263744' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='covid19_data.csv' id='covid19_data.csv_6368BEDC52564BD6834E005BEDAF88DD'>
            <properties context=''>
              <relation connection='textscan.0dygart1v2v02w1266y0e1mdekps' name='covid19_data.csv' table='[covid19_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='integer' name='total_cases' ordinal='2' />
                  <column datatype='integer' name='new_cases' ordinal='3' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='4' />
                  <column datatype='real' name='total_cases_per_million' ordinal='5' />
                  <column datatype='real' name='new_cases_per_million' ordinal='6' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='7' />
                  <column datatype='integer' name='total_deaths' ordinal='8' />
                  <column datatype='integer' name='new_deaths' ordinal='9' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='10' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='11' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='12' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='13' />
                  <column datatype='string' name='excess_mortality' ordinal='14' />
                  <column datatype='string' name='excess_mortality_cumulative' ordinal='15' />
                  <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='16' />
                  <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='17' />
                  <column datatype='string' name='hosp_patients' ordinal='18' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='19' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='20' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='21' />
                  <column datatype='string' name='icu_patients' ordinal='22' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='23' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='24' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='25' />
                  <column datatype='real' name='stringency_index' ordinal='26' />
                  <column datatype='real' name='reproduction_rate' ordinal='27' />
                  <column datatype='integer' name='total_tests' ordinal='28' />
                  <column datatype='string' name='new_tests' ordinal='29' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='30' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='31' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='32' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='33' />
                  <column datatype='real' name='positive_rate' ordinal='34' />
                  <column datatype='real' name='tests_per_case' ordinal='35' />
                  <column datatype='real' name='total_vaccinations' ordinal='36' />
                  <column datatype='real' name='people_vaccinated' ordinal='37' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='38' />
                  <column datatype='integer' name='total_boosters' ordinal='39' />
                  <column datatype='real' name='new_vaccinations' ordinal='40' />
                  <column datatype='real' name='new_vaccinations_smoothed' ordinal='41' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='42' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='43' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='44' />
                  <column datatype='real' name='total_boosters_per_hundred' ordinal='45' />
                  <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='46' />
                  <column datatype='real' name='new_people_vaccinated_smoothed' ordinal='47' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='48' />
                  <column datatype='string' name='code' ordinal='49' />
                  <column datatype='string' name='continent' ordinal='50' />
                  <column datatype='integer' name='population' ordinal='51' />
                  <column datatype='real' name='population_density' ordinal='52' />
                  <column datatype='real' name='median_age' ordinal='53' />
                  <column datatype='real' name='life_expectancy' ordinal='54' />
                  <column datatype='real' name='gdp_per_capita' ordinal='55' />
                  <column datatype='string' name='extreme_poverty' ordinal='56' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='57' />
                  <column datatype='real' name='handwashing_facilities' ordinal='58' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='59' />
                  <column datatype='string' name='human_development_index' ordinal='60' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1mo7t1i1i5ddct1geecwx1bjmgep'>
      <datasources>
        <datasource caption='covid19_data' name='federated.1mo7t1i1i5ddct1geecwx1bjmgep' />
      </datasources>
      <datasource-dependencies datasource='federated.1mo7t1i1i5ddct1geecwx1bjmgep'>
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Afghanistan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Albania&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Algeria&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;American Samoa&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Andorra&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Angola&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Anguilla&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Antigua and Barbuda&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Armenia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Aruba&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Azerbaijan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahamas&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahrain&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Barbados&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Belarus&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Belize&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Benin&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Bermuda&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Bhutan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Bolivia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Bonaire Sint Eustatius and Saba&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Botswana&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;British Virgin Islands&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Brunei&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Burkina Faso&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Burundi&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Cameroon&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Cape Verde&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Cayman Islands&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Central African Republic&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Chad&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Comoros&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Congo&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Cook Islands&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Costa Rica&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Cuba&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Curacao&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Cyprus&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Czechia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Democratic Republic of Congo&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Djibouti&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Dominica&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Dominican Republic&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;East Timor&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Ecuador&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;El Salvador&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;England&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;England &amp; Wales&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Equatorial Guinea&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Eritrea&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Estonia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Eswatini&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Ethiopia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Falkland Islands&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Faroe Islands&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Fiji&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;French Guiana&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;French Polynesia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Gabon&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Gambia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Ghana&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Gibraltar&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Greenland&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Grenada&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Guadeloupe&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Guam&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Guatemala&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Guernsey&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Guinea&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Guinea-Bissau&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Guyana&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Haiti&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Honduras&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Iceland&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Iraq&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Isle of Man&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Jamaica&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Jersey&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Jordan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Kazakhstan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Kenya&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Kiribati&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Kosovo&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Kyrgyzstan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Laos&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Latvia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Lesotho&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Liberia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Libya&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Liechtenstein&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Macao&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Madagascar&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Malawi&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Malaysia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Maldives&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Mali&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Malta&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Marshall Islands&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Martinique&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritania&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritius&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Mayotte&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Micronesia (country)&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Moldova&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Monaco&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Mongolia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Montenegro&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Montserrat&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Morocco&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Mozambique&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Myanmar&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Namibia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Nauru&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Nepal&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;New Caledonia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Nicaragua&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Niger&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Niue&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;North Korea&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;North Macedonia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Northern Ireland&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Northern Mariana Islands&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Oman&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Palau&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Palestine&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Panama&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Papua New Guinea&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Paraguay&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Pitcairn&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Puerto Rico&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Qatar&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Reunion&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Rwanda&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Barthelemy&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Helena&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Lucia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Martin (French part)&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Pierre and Miquelon&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Samoa&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;San Marino&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Sao Tome and Principe&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Scotland&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Senegal&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Seychelles&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Sierra Leone&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovakia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Solomon Islands&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Somalia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;South Sudan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Sri Lanka&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Sudan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Suriname&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Syria&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Tajikistan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Tanzania&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Togo&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Tokelau&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Tonga&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Transnistria&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Trinidad and Tobago&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Tunisia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkmenistan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Turks and Caicos Islands&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Tuvalu&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Uganda&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;United States Virgin Islands&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Uzbekistan&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Vanuatu&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Vatican&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Venezuela&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Vietnam&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Wales&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Wallis and Futuna&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Western Sahara&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Yemen&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Zambia&quot;' />
          <groupfilter function='member' level='[none:country:nk]' member='&quot;Zimbabwe&quot;' />
        </groupfilter>
        <target field='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_E5855F115FE342DEB803CFEA37FCFAA9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 10 Countries by Total COVID-19 Cases' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cases Over Time '>
      <table>
        <view>
          <datasources>
            <datasource caption='covid19_data' name='federated.1mo7t1i1i5ddct1geecwx1bjmgep' />
          </datasources>
          <datasource-dependencies datasource='federated.1mo7t1i1i5ddct1geecwx1bjmgep'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action1_E5855F115FE342DEB803CFEA37FCFAA9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]</column>
            <column>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_cases:qk]</rows>
        <cols>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{A08129CA-9A80-466E-91A9-FE98A38D703D}' />
    </worksheet>
    <worksheet name='Global COVID-19 Cases by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Global COVID-19 Cases by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid19_data' name='federated.1mo7t1i1i5ddct1geecwx1bjmgep' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1mo7t1i1i5ddct1geecwx1bjmgep'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action1_E5855F115FE342DEB803CFEA37FCFAA9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]</column>
            <column>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Latitude (generated)]</column>
            <column>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Longitude (generated)]</column>
            <column>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Longitude (generated)]' field-type='quantitative' max='15128878.905601436' min='-14112558.272721579' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Latitude (generated)]' field-type='quantitative' max='26402303.152926654' min='-14730152.451479426' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_cases:qk]' max='103436829' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_cases:qk]' />
              <lod column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]' />
              <geometry column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='229' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Latitude (generated)]</rows>
        <cols>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F5ADD783-03A1-47AF-AB7A-CCBF06E06EC3}' />
    </worksheet>
    <worksheet name='KPI'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid19_data' name='federated.1mo7t1i1i5ddct1geecwx1bjmgep' />
          </datasources>
          <datasource-dependencies datasource='federated.1mo7t1i1i5ddct1geecwx1bjmgep'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vaccinations]' derivation='Max' name='[max:total_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_vaccinations:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action1_E5855F115FE342DEB803CFEA37FCFAA9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]</column>
            <column>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[:Measure Names]</column>
            <column>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Action (Country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[:Measure Names]' value='257' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='14' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='22'>&lt;</run>
                <run fontsize='22'>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[Multiple Values]</run>
                <run fontsize='22'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{FACA46A7-8CEC-4531-BB27-28C70FDFB2F5}' />
    </worksheet>
    <worksheet name='Top 10 Countries by Total COVID-19 Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid19_data' name='federated.1mo7t1i1i5ddct1geecwx1bjmgep' />
          </datasources>
          <datasource-dependencies datasource='federated.1mo7t1i1i5ddct1geecwx1bjmgep'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Reunion&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
              <bucket>&quot;French Guiana&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;New Caledonia&quot;</bucket>
              <bucket>&quot;French Polynesia&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Jersey&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Curacao&quot;</bucket>
              <bucket>&quot;Aruba&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Mayotte&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Isle of Man&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Guernsey&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Faroe Islands&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
              <bucket>&quot;Cayman Islands&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;East Timor&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Liechtenstein&quot;</bucket>
              <bucket>&quot;Gibraltar&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Anguilla&quot;</bucket>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;Saint Helena&quot;</bucket>
              <bucket>&quot;Falkland Islands&quot;</bucket>
              <bucket>&quot;Montserrat&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Tokelau&quot;</bucket>
              <bucket>&quot;Vatican&quot;</bucket>
              <bucket>&quot;Pitcairn&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;North Korea&quot;</bucket>
              <bucket>&quot;Western Sahara&quot;</bucket>
              <bucket>&quot;Wales&quot;</bucket>
              <bucket>&quot;Transnistria&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Scotland&quot;</bucket>
              <bucket>&quot;Northern Ireland&quot;</bucket>
              <bucket>&quot;Macao&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;England &amp; Wales&quot;</bucket>
              <bucket>&quot;England&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]</rows>
        <cols>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_cases:qk]</cols>
      </table>
      <simple-id uuid='{E0DEC804-04DB-42DB-9602-DBEAEF8778E4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <size maxheight='600' maxwidth='1200' minheight='600' minwidth='1200' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='3' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone h='96666' id='12' param='vert' type-v2='layout-flow' w='63999' x='833' y='1667'>
            <zone fixed-size='77' forceUpdate='true' h='16166' id='4' is-fixed='true' type-v2='text' w='63999' x='833' y='1667'>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>Global COVID-19 Dashboard</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#f5f5f5' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
            <zone fixed-size='107' h='21166' id='13' is-fixed='true' name='KPI' w='63999' x='833' y='17833'>
              <layout-cache type-h='cell' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#f5f5f5' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
                <format attr='background-color' value='#ffffff' />
              </zone-style>
            </zone>
            <zone h='59334' id='17' param='horz' type-v2='layout-flow' w='63999' x='833' y='38999'>
              <zone h='59334' id='18' name='Cases Over Time ' w='29665' x='833' y='38999'>
                <layout-cache cell-count-w='6' minheight='203' non-cell-size-w='70' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#f5f5f5' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone fixed-size='392' h='59334' id='19' is-fixed='true' name='Top 10 Countries by Total COVID-19 Cases' w='34334' x='30498' y='38999'>
                <layout-cache fixed-size-h='5026' minwidth='260' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#f5f5f5' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone fixed-size='392' h='96666' id='5' is-fixed='true' name='Global COVID-19 Cases by Country' w='34334' x='64832' y='1667'>
            <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#f5f5f5' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='10' />
              <format attr='background-color' value='#ffffff' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='padding' value='10' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1050' minheight='1050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='20' param='vert' type-v2='layout-flow' w='98666' x='667' y='1333'>
                <zone fixed-size='77' forceUpdate='true' h='16166' id='4' type-v2='text' w='63999' x='833' y='1667'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Benton Sans Book' fontsize='22'>Global COVID-19 Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#f5f5f5' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='96666' id='5' is-fixed='true' name='Global COVID-19 Cases by Country' w='34334' x='64832' y='1667'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#f5f5f5' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='85' h='21166' id='13' is-fixed='true' name='KPI' w='63999' x='833' y='17833'>
                  <layout-cache cell-count-w='3' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#f5f5f5' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59334' id='18' is-fixed='true' name='Cases Over Time ' w='29665' x='833' y='38999'>
                  <layout-cache cell-count-w='6' minheight='203' non-cell-size-w='70' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#f5f5f5' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59334' id='19' is-fixed='true' name='Top 10 Countries by Total COVID-19 Cases' w='34334' x='30498' y='38999'>
                  <layout-cache fixed-size-h='5026' minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#f5f5f5' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E7E375E1-EC7D-415F-88B6-6712D1F21825}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[:Measure Names]</field>
            <field>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9FC05AFC-621F-4948-A520-0B5E1A780328}' />
    </window>
    <window class='worksheet' name='Cases Over Time '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]</field>
            <field>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91214001-C21A-4FE2-8935-7A076E26A903}' />
    </window>
    <window class='worksheet' name='Top 10 Countries by Total COVID-19 Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A3F8068-2CA6-4810-AA1A-92B28D070CE1}' />
    </window>
    <window class='worksheet' name='Global COVID-19 Cases by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[max:total_cases:qk]</field>
            <field>[federated.1mo7t1i1i5ddct1geecwx1bjmgep].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{46D225B2-19C0-4966-BE22-AEE4007CD309}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cases Over Time '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global COVID-19 Cases by Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Countries by Total COVID-19 Cases' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D32BC276-38A2-4A26-AE7B-312C3397F179}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cases Over Time ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWLElEQVR4nO3dWYxbV57f8S/3nSyyFrI2LbVItciWLFmLt3ba6WDcnZ4AmQlmJsE0MAPM
      IC8JkKfkYZ4CJC95SB4aATJZ0C8TDDyTAI0kiLu9tHu8ybIka3FJVaVaVBtZC4v7vtx78iC1
      p9sOVJTF4mWR/w9glGyXoH+J98d7eM65529SSimE6EImk8lkNroIIYwkARBdTQIgupoEQHQ1
      CYDoahKAIyfPj//tv+Yn//U/8861BX59Cu/e/TnDqjqqJABHjsITmeSP/vhHbN75kERslb96
      6y+5d/cqP/kvf87/+uVN4uv3+eu33mJufd/oYtueBOCIMpmtmEwa6fgOpUqJuCvC9HNn+Aev
      z/Lz//lT0qU8n179wugy257V6ALE09tfX+Cn/+Ov8Y6cI7O5SN3Th8Npx60VeP/GEoOjg+ya
      ezk5OWZ0qW3PJCvBR41OLpNFw4LX58Gk1ciXKrg8Hky1CqW6CY/DTL5QwuZ043bajS64bZlM
      JpMEQHStttsKoes6uq4bXYboIm0VALkZiVZrqwAI0WoSANHVJACiq0kARFeTAIiuJgEQXU0C
      ILqaBEB0NQmA6GoSANHVJACiq0kARFeTAIiuJk+EdaFCqcrqdor9TBGHzUrI58LrstPjdeJ1
      d9cDNBKALlDXdHLFCreXd/ns3hZzD/dQSmE2m1Dq0Tb0X321WMx4XXZ6Ay4CHichn5OA10nA
      4yDocxH0OQn6XDhsFiwWMxazCYv50VeTyWT0j/rU2uqJME3TMJlMmM0yMntW5Wqd6H6Wew/j
      3F7eYXEjgd1q5nikhxenhjg/OUgk5KVUqZHKlymUqmQLFdKFCvlSlUSmSKZQIZktkS9VqdY0
      ytU6pWqNcqWOzWbB73bgc9vxuR0EH989Qj4XPreDgaAbv8eBzWLBYbNAC7LhdtjwuR0Nf3/b
      PRIpAXg2lVqd1ViaO8s73FiMsbmXxeuyc3YizIunh5gcCdHrd2M2P93VWNd0KtU6xUrt0T/l
      GsVynVS+RDpfJpkpkcyVKFXq5IoVipUa6XyZcqWO3WbBaW/NQON4pIc/+9FrDf95EoAj7ldD
      l+h+lv/72TLXF6LkilX6e9ycm4hw4fQgE8MhPC475kMeniil0HVFTdOpazq1uka1plEo18gU
      yrTiKvO5HYwPBxv+WSUAR5CuFPlilYfbKW4v73J9IcpussDxSIDL08NcmR1hdCBgdJlHgslk
      MsmH4CNAKUUqV2ZpK8Fn96PcX4uTzJY4Eenh8swIF6eGGBsKYrdajC71yJE7QJtSSrGXKnB9
      IcaNxRgbuxmqNY3JkRBnxsK8MBlhqM/XsvF1J5IhUBuq1jT+5s4a71xfZXMvg9Vs5szYAFdm
      Rjg7EcbvcWDp4r+fZpIAtKH3v3jIf/s/X/D6ueNcnBpmfChIwOs0uqyOJJ8B2oxSirnVXZ4b
      C/OnP7zw1NOV4ul171ttG8oVq8w9jHNuMiIXf4s05Q6glMbi1Z+xZp/mQm+Bzxe28PYe49Kk
      n/c/ncPmDvDqxUk+/psb6DYHL792ls2VCmF/loTqZep4fzPKOPJWYknypSovTEaMLqVrNCUA
      hWQMzT1Ij8NKNF3nze+/ydKXX7C6XOHlN79Pfv0+W/ceMvV3vocnvUk6nSG5vUOh7OfFC/3o
      uv54IeXRuaDdej7o1XtbDIa8eJ1W6vW60eV0haYE4Pqnn2Lx+NnIZZkc8n31300oFDxaBTTx
      t6uBJhMWmw2tVkFXYH28cmf62tduopTiwWaCi1NDuBw2o8vpGk0JwEvf+yFabg/Ljs54oMzP
      3/4ZgYExXjzl5b2fvY3T18vLL07w8S/fQzk8XHn1DMWwk6FQmcXVGLMTQ5hNJpRSXTsLFN3P
      EY3n+JMfRrBYZEGrVWQatE389KMF3ru5yr//Z78lK7ot0nb9AbqVput8Ph+V7QwGkAC0gVSu
      zOZeliszI0aX0nUkAG1gcWOfuqbL9KcBJAAGU0px7X6U2ZP9MvtjAAmAwXLFKg+2Epw/NWh0
      KV1JAmCw1e0U8XSR2ROyGm4ECYCBlFLMr8U5OdhDOOQ1upyuJAEwUK2u8/lCjLPjYXmwxSAS
      AAOlciU29zJcOD1kdCldSwJgoA/vrhP0uRjq8x38zeJQSAAMtLCeYOpYHz3yxJdhJAAGyRUr
      LG0luDQlwx8jSQAMcmd5l1pdZ1qmPw0lATCAUoobizHGhoL0BdxGl9PVJAAGyJeqzK/vc0FW
      fw0nATBAbD9HplDm0syw0aV0PQlAiyml+OLBNn0BN/09MvwxmgSgxap1jVtLO8ye6JeHX9qA
      BKDFEpkSq7EUl2dGuvLh/3YjAWix+fU4Qb+Lk4M9RpcikAC03Gf3o5we7SXocxldikAC0FLF
      So27K7tMH+8zuhTxmASghRbW97GYTZybkGd/24UEoIWuzUcZ6vXJ7s82IgFokUq1ztzqHq+d
      PS6zP21EAtAiK7EUe6kCp4/1Gl2K+DUSgBa5vxbH73EwMRwyuhTxayQALVDXdOYe7nFxagiL
      NL5oKxKAFoinC6xEU1ycGpbxf5uRALTA/bV9zGYTY0Oy+ttumnIWh1avUanWsNkdWM2KUrmK
      2WLFYbdRrZQxWWzYbBZqlQrKZMFut6BrYDaDpiusHXwevq4rri9EGR8O4nM7jC5HfE1TArCz
      tsjabpoqLp4P63yyXuPYYJjJfjMf3VnDZnNw6dwYn127j8lq5sKVM0RXq/R50uRsYSZHOndm
      pFbXWI4m+b3vzmK1yA233TQlAOFjx0lmSlQdAbLpHXpCfsLhAeJby1x+47vk1uaJzm9w+tXX
      8KS2yGay7K6vkY9EuHi+F13Xv+oT9qsuMZ1ifn2fQqnGxFAPtVrN6HLE1zQlAGaLg6GREVaj
      e4Snz+Et5FlZukfAYsWrg1I6ZgtoGuhKx2Qy4wv2oZXzaApsj7vC6LrecR1ibi/vcDwS4Fik
      B3MHBbtTNCUAy3M32YgXsHj6iG+tsLwZx+brZ2wqwi/eeRtnYICXX5zi4w/eQ3f4eOmVM5Qy
      bob7qiytxpjp0B5h1ZrGJ3NbvPrcaEd/zjnKpEfYIdrYzfCv/vw9/uxHr3Hm5IDR5YivkR5h
      h+z28g5Ou5WpY7L9uV1JAA6JpulcX4hxaWpYZn/amLwyh2Q3VWB9J83z42GjSxFPIAE4JMvR
      5KOjD+Xpr7YmATgESinmHu4xe7Ifv0dWf9uZBOAQFMo1bi5u89xYWMb/bU5enUOwsZshX6ry
      /LhMfbY7CcAh+OTLDYZ6vUSk8V3bkwA0mVKKhY0EZyci0vj6CJAANNluqsBWPCtHnx8REoAm
      u7EQw2m3clyOPjwSJABNdu3+FjMn+vHLwy9HggSgifYzRTbjWV6aHTG6FNEgCUATrUSTVKoa
      L0zK0YdHhQSgSXSl+Hw+ynC/D7fM/hwZEoAmKZVrLG4muDQ9jFnO/jkyJABNshXPspcqcOH0
      UEc909zpJABNoJTi9vIuI/1+BmX190iRADSBUnBjMcap0V7cThn/HyUSgCZIZkusRJOcnZCH
      X44aCUATzD3cI+hzMXO83+hSxFOSADTBtfko40NBAl6n0aWIpyQBeEbZYoX59Tgvnxk1uhTx
      LUgAntGXK7vkS1U5+uSIkgA8o6WtJCcjPUR6ZfrzKJIAPIPS476/508PGV2K+JYkAM8gGs8R
      S+R4Rcb/R5YE4Ft6tPq7Q9DrotfvMroc8S1JAL4lTX8UgOkTfbhk9ffIkgB8S4VSlYfbaa7M
      jMi5/0dYUwJQKxdJJBIUKzWUXiedTFKq1lFKkUsnyRcrKBSFbJpsvoRCo1qto7Q6lerR7Jpy
      88E2LruV8eGg0aWIZ9CUBhn7O5vspPJki4qTvRY20hUwuTh73MPnS/tY0Hlh9hg37q5jNWmc
      uTDN9lqNkCtJyT3M+ODRu4i+eLDN+HCQXr/b6FLEM2hKAPoGI2xt3cUXGiFRzvDylcsszd1i
      bSPHhVeukFubJ7YY49TlS7iTW+RyWbaWHpA7fpLLY8GveoTpug7Q9vvpi5Uat5Z2+EffmZK+
      X0dck3qEuZl5fpa5xYdYUNR1haYp7BZFpaZT1zRsDhOVsoZdq2Ox2gmPjlMtJ6lqCofFhMVi
      +erCb/cOMZtbKZRSXJgaxmptyl+hMEhTXr2H87dY38viCEQ4Pezig3ffpXfkNOcmvXzwy3dx
      9kS4/MI0n334IXVHgCtXpqjkqgz2enm4scPU2CC/es83mUxtfwe4dj9KJOTlWDhgdCniGUmP
      sKdUrWn8y//0Li/NjvL7b8waXY54BtIj7FtY3U4R3c8xe1L2/ncCCcBTWtpM4Hc7mBgOGV2K
      aAIJwFOoazp3VnY5f2oQh036/nYCCcBTSOVKzK/v8/z4QNt/UBeNkQA8hYWNfUwmmBzpNboU
      0SQSgKdwdW6LieEQfQFZ/e0UEoAGaZrO4maCi1ND0viug8gr2aCVWIp8qcq0HH3SUSQADbq1
      tEPQ52S432d0KaKJJAAN2knmGOn347DJ3p9OIgFo0HYiz2CvvPt3GglAA4rlGvF0kdEBv9Gl
      iCaTADQgW6xQqdblDtCBJAANiKeLlKp1jskdoONIABoQTxdw2Cz4PdL6tNNIABqwtp1mpF/e
      /TuRBOAASil2UnkJQIeSABygWtPYzxQZCHpkB2gHkgAcIF+uksqVOTHYY3Qp4hBIAA5QKNXI
      FStEpPtjR5IAHGA3mcftsBGQGaCOJAE4wGY8S9DnlD1AHUoC8ARKKaLxHOGgF6ddAtCJJABP
      oCvFfqZAyO/CbJYZoE4kAXgCTXt0BxgdkBPgOpUE4AkqtTrJXEl2gXYwCcATbMVzOGxWmQHq
      YBKAJ9hO5PC4bAR90gOsU0kAnmBjN0PQ58LrthtdijgkEoAniGeKDPS4pQdYB5MAPMH6Tlpm
      gDpcU1Z34hsPmFvewBUa5cyA4v07W4Qjw5yfivDJJzew9wxy6ewY1z/+lKq9h8uXT7GzWaXf
      X2G35GB8pK8ZZTRVqVIjnS/LNugO15QA+AdG+c7wCb68e59UQufyG3+XsB1ic7c49fJ3KW/e
      Z+v+PL3PvYw/v0EimSafU6TicabPn+frPTraoWfHdiKPpil6A662qEccjoYCoJSOUlCv1bDZ
      HXx9SGxRde7fe8CxyWlIr/PFR+8x5wgw6rEz6LKi2+3k9ssEvDYcVSdZrcb6/Jf0jJ/GYTGj
      lI6maSilUEq1xb777UQWUESCbmmE18EaCsDmzU9JeTz88p3r/OD3/oDJwd8cFizevUnVGyGZ
      SOBSJkZGRthPZunrc3L7+h0stSIzp4a4c/MuDlOJyedOcWL2EkFnktVYkvHhEDazua1aJMUz
      JdxOO0G/x+hSxCFqKADFVJx3PvqMidPPk8kW4WsBGJ2cJp2vYLbbGegJwH6KwdGT+N12Zhw7
      WNw99PhcnDM5qFk89PpceMYVTns/hUr9UH6wZxXbzzHUJ8egdLqGAjB+5TLhTY2xYz0E+745
      K+IPhfH/Wseg4ZG/fdfsCw999euevshXv3Y9Xlvyum1PW/OhU0qxncjLFogu0NBYY+Gjq2SL
      ZUqVMjt76cOuyXClSp1EpshwnwSg0zUUgONnpqjlYly/s87IUOc3h8sWK+RLj/oYi87WUAA0
      ZeG3//Hv4DNZsBg/QXPoUtkSpWpdAtAFGvoMsH7nPg/qGRyBCOvRBGH/0MG/6QiLZ4o4bBZ8
      btkF2ukaCsD0dy6TvL3F2IkQnlDnN4hb380w2OvDbpVWqJ2uoSFQIbnDrasf8/Y7H5Iqd/ai
      kFKKnUSewZAXm9X49QhxuBp6hdfnNugbHODUzBjFbOmwazJUta6xm8oTDnnbYkVaHK4DA1Ap
      FRl/6QKvvnKBteVtwh3eI6tW10lmSwzLIlhXOCAANa794kP0wAjjk9N857kREuliayozSK5Y
      IVusyAxQlzggACaqxV3Wt9Po9QrLKw/B0tnn4yQyJZx2q/QC6BIHXM1WXv/7v817P3uHm7+o
      MH3xdWaGO3tosLqdIuBx4pcp0K5w4Nu5zR3i+7/zB62opS3E9nP0+l24HO23R0k03wEBqHHj
      F++yEEs+/ncHr775Jic6+ANiLJEjHPLKSXBd4sAh0Oyl1xiv1ajV6oAJf8DdksKMoJQiFs9x
      fnLQ6FJEixz4Idjl9ZFfucF/+Hc/5r//1Vss7+VbU5kBipUamWJFtkF3kYamdLKJMmfOnaJq
      tlIuVg67JsPE9vNYLWZ6/Z17lxO/qaEAnH79DUbKFR5u7HLqeOfuBdpO5LBazIQCchJctzhw
      JViv17j7wSfsY8On8qxGkwf9liMrGs8R8rnwueQkuG5x4B0gvbvMx9c+ZPWD9/F4w/zTf/58
      K+oyxGY8Q6RX9gB1kwMDEBqe5gdvXGHeMoJ9b4lUusCxoLMVtbVUra6xtp3mjfMnjS5FtFBD
      u0FdHjtb6xvs7qew2TtzgShXrFKs1GQGqMsccAeos74UZejCb/GHY3E0m5ceb2d+QNxLF8iX
      qnIUYpc5IABVPn/vfcLJWRyPv31idpZeb+cNgfYzRSxmM70dvNAnvunAzwBmiw23x4Pz8bdb
      2+DUtsMQ288R9DqxWjrz5xP/fwcEwM4rP/h79I1EmnOKbpt61A41y2g4IHuAuswBb3dWIh1+
      8QPUNZ29dJGhXq80w+gyT3W/T26t8jCWOqxaDFOs1Ehki9IMows1FIBMKkVd13G6vLjcnXc/
      KFXqpHJlIiF5DLLbNHQ1m0q7/OStv6RmCfC7v/+7h11Ty8VTBSxmE/1BmQHqNg3dAXKZDJGT
      M0wMBihWv3kuUL1SYHXpAXvpAnq9wtrKEql8BaV0Yusr7CRyKBTx6BqbO0kUNfL5CnqtQjZv
      /EP2sUSOgMeJ0955dzfxZA294jazzvz163hCfoYv6N/4//s722Czs7I4T8apKLt6iM3dY2rI
      yVrGijn2JbaTYRaiZVwqisM1wd6mhteyh2VgAr+BIw+lFJt7WUI+J255DLLrNBSA2OIu4dFB
      hk4OUi1883mA8LExkjsblIMD5Espzp2aYOnebbZ2qpy5OEN2XbGzkmD8xfO4ElEyxRxr974k
      dOoML4W86LpxLZKUUsTTefoCbpSuUa1qLfuzhfEaex7g1YsEUjmu3Vri3AvfnClJRR+SxM/0
      qX7mbu5SqNYoVzS8DjPpfJVKqYQnYCWdKqPKBaw+HydmLlAtRMlXx/A5LJgNapGkaTpb8Tzf
      u3ASu122QXebAwJQ4e2/+As2SurxsehOsuUK/b7fPDJkJ7ZFNFsjFhvg/Ngg1z/6kIETsxwf
      8XD104+wh0Y5P3uMW1evknL28uLxIHqpysCJSbZ29/EeC2PU7HtN0786ClF0H5N6Yg9QjdW7
      N7g5v4HFbiY0dIrL52dw2Q7n1GQj7gDReJZ/8eOf82/+5LucPtZ+/YrF4TGZTKYDrjQzI5Nn
      eO21y4T9btbu3SaaLLSmuhbZjGfxuGz09Ug3yG504G7Q//2T/8jnsQIzs88zEBnE7eisqcKN
      3Qxuh42AnATXlQ64mm28/g//Cee+OgnCgt/ZWVOF8XSRSMiLVXoBdKUDAmCmb3CETh4Zb+5l
      ODXauSddiCf7f+60jHB+AAiLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      NjLi4iuQNZUTPTCRwUOGEh3iS8LgYZJ3aAn3pk91gSQkzjWSACTcGkkAEm6NJAAJt+asCaCp
      qYlnnnmGnTt/n3MtKirirrvu4tprr2Xbtm2IokhBQQFz5sxh+vTp3H333WRlZZ0wvdraWm64
      4Qaee+45AFJTU5k9ezbTp0/nkUceoaLiyEpne3s7ixcvZubMmdxzzz00NjYek059fT1PPfUU
      M2bMYO7cudTV1SGKIjt27OD2229n5syZvPfeezidTtrb21mwYAEzZszgxRdfxGq1np3COgWi
      KGI2m3n66afZvXv3cfddLhffffcdN9xwA1dffTWrV69GFEWqq6t55plnmDFjBg8++CBVVUcO
      2nvzzTeZNm0a06ZN48knnzwmrcLCQmbOnNlxf9q0aWzatAmXy8XSpUu5/PLLmT9/Pi0tR079
      dDgcvP3228ycOZO77767I4+zRUtLCwsWLODyyy/n+uuvZ8OGDb8eDP4727ZtO8b+3+qfw+Hg
      66+/ZvHixR1hRVE8OwLIyMhg8uTJfPrpp1RXVwNgt9u55557iIyM5LrrruPOO++koqKCiooK
      EhISePzxxwkLC+O+++7D6Tx2OVsQBBYvXkxbWxspKSkAFBcXk5SUxBNPPIHD4WDevHmIosjL
      L7/M9u3beeSRRxg/fvxx7h1feOEFampqmDdvHjabjSeffBKr1cqiRYu46KKL+Mc//sF//vMf
      du/ezSuvvEJ2djZz587l4MGDvP7662ejuE7Jb2X5ySefUFNTc9z96upq/ve//zFr1ixuuukm
      Hn30UUpLS3n//fdxuVw89thjuFwunnnmGURRZN26dfz1r39l/vz53HTTTcekFRAQwBNPPMH8
      +fN59NFHSUtLIyoqiq1bt/LWW29x//33U1RUxAsvvIAoiixevJi1a9fyyCOPcOGFF551V5qt
      ra3I5XIeeeQRrrnmGm677TbMZvMxYfbs2UN8fDzz589n/vz59O/fH5vNxt///neef/55Dhw4
      0BF28+bNZ3JMaufRarUsX76cN954o+NaeXk5jY2NPPbYY0dOeN+yhc2bN3PLLbeQlJREe3s7
      VVVVpKenH3MOLkBaWhppaWnce++9LFmyBICrrrqqo1AOHDhASUkJFouFdevW8cEHH6BUKklM
      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
    </thumbnail>
    <thumbnail height='192' name='Global COVID-19 Cases by Country' width='192'>
      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
      uVFATwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='64' name='KPI' width='192'>
      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
      5nBFR3cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Countries by Total COVID-19 Cases' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
